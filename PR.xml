<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pr SYSTEM "PR.dtd">
<pr>
    <meta>
        <key>DAW::Teste</key>
        <title>Teste</title>
        <bdate>20/01/2021</bdate>
        <edate>20/01/2021</edate>
        <supervisor>jcr</supervisor>
    </meta>
    <team>
        <member id="a84197">
            <name>Joao Pedro Araújo Parente</name>
            <email>a84917@alunos.uminho.pt</email>
        </member>
    </team>
    <abstract>
    <p>
        Exercício 1 , onde nos é pedido para fazer uma api. (Para executar app: npm start)

	<p>
		<b>1."Data cleansing"-fix ao json</b>   
   
        Usando as reg exp do vscode fiz 
            <u> find= title: replace "title":    </u>
            <u> find= date: replace "date":     </u>
            <u> find= href: replace "href":     </u>
            <u> find= ref: replace "ref":   </u>
        Depois ainda haviam 3 erros , como eram poucos resolvi manualmente (faltava virgulas, aspas)

	</p>
	<p>
		<b>1a: Acrescenta um campo _id e coloca lá como conteúdo a ref mas substituindo as '/' por '_';</b>
        Ainda com as reg exp do vs code fiz
        <u>find="PT/ABM/PCML02/001/(\d{5})/(\d{6})" replace="PT/ABM/PCML02/001/$1/$2","_id":"PT_ABM_PCML02_001_$1_$2"</u> 
	</p>
    <p>
		<b>1b:Mantem na mesma o campo ref;</b>
        Manti..
	</p>
    <p>
		<b>1c e 1d:Acrescenta um campo pai com o nome do pai do indivíduo batizado; e Acrescenta um campo mae com o nome da mae do indivíduo batizado;</b>
        Com as reg exp do vs code fiz
        <u> find ="(Registo de batismo n\.º \d+: )(.+)\. Pai: (.+); Mãe: (.+)"
        rep= "$1$2. Pai: $3; Mãe: $4","pai":"$3","mae":"$4","nome":"$2"</u>

        Além disso ainda criei um campo "nome" que vai ter o nome do batizado pois existe uma rota que pede isso e ter esse campo já aparte facilita bastante.

	</p>
    <p>
		<b>1e:Mantem o campo title como estava originalmente;</b>
        Manti..
	</p>
    <p>
		<b>1 Extra</b>
        Além disso acrescentei um campo novo year que me vai facilitar para a rota que pede os batizados de um dado ano
        find="(\d{4})(-\d{2}-\d{2}/\d{4}-\d{2}-\d{2})"
        rep="$1$2","year":$1
	</p>
     <p>
		<b>1.3 </b>
        <u> $  mongoimport -d daw2020teste -c batismos --jsonArray batismos.json 
            2021-01-20T13:22:43.560+0000    connected to: localhost
            2021-01-20T13:22:43.647+0000    imported 2571 documents</u>
	</p>


	<p>
		      Exercício 2 , onde nos é pedido fazer pedidos a uma api.(Para executar app: npm start)

	</p>
	<p>
		<b>2.1: Quantos processos (nível 3) e quais são (obtem uma lista em JSON; podes concatenar sublistas invocando várias queries), 
            pertencentes à descendência da classe 900?</b>
        R: 21 descendetes de nível 3 (8 desce do 900.10 e 13 desce do 900.20)
	</p>
    <p>
		<b>2.2: Quantas entidades estão catalogadas? </b>
            R: 721 entidades.
	
	</p>	
    <p>
		<b>2.3: Quantos processos (classes de nível 3) se encontram na descendência de 900.10?</b>
        R: 8 processos.
	</p>	
    <p>
		<b>2.4: Quantos processos (classes de nível 3) estão relacionados com 900.10.505?</b>
        R: 5 processos
	</p>
	



    </abstract>
    <deliverables>

        <link url="ex1/api-server/models/batismo.js">batismo.js</link>
	<link url="ex1/api-server/controllers/batismo.js">batismo.js</link>
	<link url="ex1/api-server/app.js">app.js</link>

	<link url="ex2/app-server/app.js">app.js</link>
        <link url="ex2/app-server/routes/index.js">index.js</link>
        <link url="ex2/app-server/views/*.js">*.js</link>

        <link url="PR.xml">PR.xml</link>


    </deliverables>
</pr>
